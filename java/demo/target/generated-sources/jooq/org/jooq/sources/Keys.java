/*
 * This file is generated by jOOQ.
 */
package org.jooq.sources;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.sources.tables.Firms;
import org.jooq.sources.tables.Staff;
import org.jooq.sources.tables.records.FirmsRecord;
import org.jooq.sources.tables.records.StaffRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<FirmsRecord, Integer> IDENTITY_FIRMS = Identities0.IDENTITY_FIRMS;
    public static final Identity<StaffRecord, Integer> IDENTITY_STAFF = Identities0.IDENTITY_STAFF;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FirmsRecord> FIRMS_PKEY = UniqueKeys0.FIRMS_PKEY;
    public static final UniqueKey<StaffRecord> STAFF_PKEY = UniqueKeys0.STAFF_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<FirmsRecord, Integer> IDENTITY_FIRMS = Internal.createIdentity(Firms.FIRMS, Firms.FIRMS.FIRMID);
        public static Identity<StaffRecord, Integer> IDENTITY_STAFF = Internal.createIdentity(Staff.STAFF, Staff.STAFF.STAFFID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FirmsRecord> FIRMS_PKEY = Internal.createUniqueKey(Firms.FIRMS, "Firms_pkey", Firms.FIRMS.FIRMID);
        public static final UniqueKey<StaffRecord> STAFF_PKEY = Internal.createUniqueKey(Staff.STAFF, "Staff_pkey", Staff.STAFF.STAFFID);
    }
}
